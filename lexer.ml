# 3 "lexer.mll"
 
	open Keiko
	open Parser
	open Tree
	open Lexing
	exception Eof

let lineno = ref 1


# 13 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\221\255\222\255\223\255\002\000\003\000\230\255\231\255\
    \232\255\005\000\235\255\005\000\237\255\238\255\239\255\240\255\
    \241\255\242\255\000\000\000\000\002\000\001\000\005\000\006\000\
    \000\000\000\000\003\000\001\000\019\000\255\255\008\000\006\000\
    \253\255\020\000\006\000\007\000\252\255\009\000\010\000\026\000\
    \018\000\029\000\015\000\251\255\030\000\243\255\018\000\250\255\
    \031\000\249\255\018\000\018\000\022\000\027\000\248\255\033\000\
    \029\000\024\000\247\255\022\000\246\255\037\000\035\000\043\000\
    \245\255\244\255\224\255\233\255\226\255\227\255\225\255\135\000\
    \252\255\253\255\254\255\036\000\255\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\027\000\026\000\255\255\255\255\
    \255\255\021\000\255\255\019\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\001\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\002\000\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\000\000\255\255\255\255\000\000\000\000\
    \000\000\255\255\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \000\000\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\000\000\
    \255\255\000\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000\255\255\000\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\073\000\
    \000\000\000\000\000\000\255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\029\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \029\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \011\000\010\000\006\000\008\000\016\000\007\000\017\000\066\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\012\000\013\000\005\000\009\000\004\000\070\000\
    \068\000\069\000\067\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\076\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\046\000\030\000\026\000\023\000\025\000\065\000\059\000\
    \061\000\018\000\050\000\048\000\037\000\027\000\020\000\033\000\
    \021\000\031\000\022\000\055\000\032\000\034\000\024\000\019\000\
    \038\000\035\000\036\000\015\000\044\000\014\000\039\000\040\000\
    \041\000\042\000\043\000\045\000\047\000\049\000\051\000\052\000\
    \053\000\054\000\056\000\057\000\058\000\060\000\062\000\063\000\
    \064\000\074\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\075\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\072\000\
    ";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\011\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\
    \005\000\005\000\009\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\075\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\024\000\027\000\000\000\000\000\000\000\018\000\020\000\
    \019\000\000\000\022\000\023\000\025\000\000\000\000\000\026\000\
    \000\000\030\000\000\000\021\000\031\000\033\000\000\000\000\000\
    \025\000\034\000\035\000\000\000\037\000\000\000\038\000\039\000\
    \040\000\041\000\042\000\044\000\046\000\048\000\050\000\051\000\
    \052\000\053\000\055\000\056\000\057\000\059\000\061\000\062\000\
    \063\000\071\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\071\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\071\000\
    ";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 15 "lexer.mll"
               (token lexbuf)
# 171 "lexer.ml"

  | 1 ->
let
# 16 "lexer.mll"
                 s
# 177 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 16 "lexer.mll"
                     ( NUMBER (int_of_string s) )
# 181 "lexer.ml"

  | 2 ->
# 17 "lexer.mll"
            ( MAIN )
# 186 "lexer.ml"

  | 3 ->
# 18 "lexer.mll"
             ( CLASS )
# 191 "lexer.ml"

  | 4 ->
# 19 "lexer.mll"
               ( EXTENDS )
# 196 "lexer.ml"

  | 5 ->
# 20 "lexer.mll"
            ( VAR )
# 201 "lexer.ml"

  | 6 ->
# 21 "lexer.mll"
            ( DEF )
# 206 "lexer.ml"

  | 7 ->
# 22 "lexer.mll"
               ( RETURN )
# 211 "lexer.ml"

  | 8 ->
# 23 "lexer.mll"
              ( PRINT )
# 216 "lexer.ml"

  | 9 ->
# 24 "lexer.mll"
            ( NEW )
# 221 "lexer.ml"

  | 10 ->
# 25 "lexer.mll"
             ( WHILE )
# 226 "lexer.ml"

  | 11 ->
# 26 "lexer.mll"
           ( IF )
# 231 "lexer.ml"

  | 12 ->
# 27 "lexer.mll"
            ( ELSE )
# 236 "lexer.ml"

  | 13 ->
# 28 "lexer.mll"
          ( DOT )
# 241 "lexer.ml"

  | 14 ->
# 29 "lexer.mll"
          ( COMMNA )
# 246 "lexer.ml"

  | 15 ->
# 30 "lexer.mll"
          ( LCURL )
# 251 "lexer.ml"

  | 16 ->
# 31 "lexer.mll"
          ( RCURL )
# 256 "lexer.ml"

  | 17 ->
# 32 "lexer.mll"
          ( SEMI )
# 261 "lexer.ml"

  | 18 ->
# 33 "lexer.mll"
          ( COLON )
# 266 "lexer.ml"

  | 19 ->
# 34 "lexer.mll"
          ( LBRAC )
# 271 "lexer.ml"

  | 20 ->
# 35 "lexer.mll"
          ( RBRAC )
# 276 "lexer.ml"

  | 21 ->
# 36 "lexer.mll"
          ( ASSIGN )
# 281 "lexer.ml"

  | 22 ->
# 37 "lexer.mll"
           ( RELOP Eq )
# 286 "lexer.ml"

  | 23 ->
# 38 "lexer.mll"
          ( ADDOP Plus )
# 291 "lexer.ml"

  | 24 ->
# 39 "lexer.mll"
          ( MINUS )
# 296 "lexer.ml"

  | 25 ->
# 40 "lexer.mll"
          ( MULOP Times )
# 301 "lexer.ml"

  | 26 ->
# 41 "lexer.mll"
          ( RELOP Lt )
# 306 "lexer.ml"

  | 27 ->
# 42 "lexer.mll"
          ( RELOP Gt )
# 311 "lexer.ml"

  | 28 ->
# 43 "lexer.mll"
           ( RELOP Neq )
# 316 "lexer.ml"

  | 29 ->
# 44 "lexer.mll"
           ( RELOP Leq )
# 321 "lexer.ml"

  | 30 ->
# 45 "lexer.mll"
           ( RELOP Geq )
# 326 "lexer.ml"

  | 31 ->
# 46 "lexer.mll"
           ( comment lexbuf; token lexbuf )
# 331 "lexer.ml"

  | 32 ->
# 47 "lexer.mll"
           ( incr lineno; Source.note_line !lineno lexbuf; token lexbuf )
# 336 "lexer.ml"

  | 33 ->
# 48 "lexer.mll"
           ( EOF )
# 341 "lexer.ml"

  | 34 ->
# 49 "lexer.mll"
         ( BADTOK )
# 346 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 71
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 52 "lexer.mll"
           ( () )
# 358 "lexer.ml"

  | 1 ->
# 53 "lexer.mll"
            ( incr lineno; Source.note_line; !lineno lexbuf; comment lexbuf )
# 363 "lexer.ml"

  | 2 ->
# 54 "lexer.mll"
         ( comment lexbuf )
# 368 "lexer.ml"

  | 3 ->
# 55 "lexer.mll"
           ( () )
# 373 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

